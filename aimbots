local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera


local CircleRadius = 340
local BulletSpeed = 2200
local GRAVITY = Workspace.Gravity
local VELOCITY_MULTIPLIER = 1.12
local GRAVITY_COMPENSATION = 1.15
local OriginalCircleColor = Color3.fromRGB(107, 98, 155)
local CircleVisible = false


local AimingEnabled = false
local RightMouseButtonHeld = false
local PredictionX = 1
local PredictionY = 1
local SmoothFactor = 1


local TargetPlayer = nil


local Circle = Drawing.new("Circle")
Circle.Visible = true
Circle.Thickness = 1
Circle.NumSides = 50
Circle.Radius = CircleRadius
Circle.Filled = false
Circle.Transparency = 0.5
Circle.Color = OriginalCircleColor


local DebugLine = Drawing.new("Line")
DebugLine.Thickness = 1
DebugLine.Transparency = 0.8
DebugLine.Visible = false


local PlayerBox = Drawing.new("Square")
PlayerBox.Visible = false
PlayerBox.Thickness = 2
PlayerBox.Filled = true
PlayerBox.Transparency = 1
PlayerBox.Color = Color3.new(1, 0, 0)

local PlayerNameText = Drawing.new("Text")
PlayerNameText.Visible = false
PlayerNameText.Center = true
PlayerNameText.Outline = true
PlayerNameText.Font = 2
PlayerNameText.Size = 16
PlayerNameText.Color = Color3.new(1, 1, 1)


local function getBulletSpeed()
	local weapon = LocalPlayer:FindFirstChild("CurrentSelectedObject")
	if weapon and weapon.Value then
		local data = ReplicatedStorage:FindFirstChild("GunData"):FindFirstChild(weapon.Value.Name)
		if data and data:FindFirstChild("Stats") and data.Stats:FindFirstChild("BulletSettings") then
			local speed = data.Stats.BulletSettings:FindFirstChild("BulletSpeed")
			if speed then return speed.Value end
		end
	end
	return BulletSpeed
end


local function findNearestTargetToCenter()
	local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	local closest, minDist = nil, math.huge
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("ServerColliderHead") then
			local pos = Camera:WorldToViewportPoint(player.Character.ServerColliderHead.Position)
			local dist = (Vector2.new(pos.X, pos.Y) - screenCenter).Magnitude
			if dist <= CircleRadius and dist < minDist then
				minDist = dist
				closest = player
			end
		end
	end
	return closest
end


local function aimAtTarget()
	if not TargetPlayer or not TargetPlayer.Character then return end
	local head = TargetPlayer.Character:FindFirstChild("ServerColliderHead")
	if not head then return end
	local bulletSpeed = getBulletSpeed()
	local distance = (head.Position - Camera.CFrame.Position).Magnitude
	local time = distance / bulletSpeed
	local prediction = head.Velocity * time * PredictionX
	local drop = Vector3.new(0, -0.5 * GRAVITY * time^2 * GRAVITY_COMPENSATION * PredictionY, 0)
	local aimPos = head.Position + prediction - drop
	local screenPos, onScreen = Camera:WorldToViewportPoint(aimPos)
	if RightMouseButtonHeld and AimingEnabled and onScreen then
		local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
		local delta = Vector2.new(screenPos.X, screenPos.Y) - center
		delta = Vector2.new(math.clamp(delta.X, -50, 50), math.clamp(delta.Y, -50, 50))
		mousemoverel(delta.X * SmoothFactor, delta.Y * SmoothFactor)
	end
end


local function updateDebugLine()
	if not TargetPlayer or not TargetPlayer.Character then DebugLine.Visible = false return end
	local head = TargetPlayer.Character:FindFirstChild("ServerColliderHead")
	if not head then DebugLine.Visible = false return end
	local predicted = head.Position + head.Velocity * 0.1
	local screenFrom = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	local screenTo3D = Camera:WorldToViewportPoint(predicted)
	DebugLine.From = screenFrom
	DebugLine.To = Vector2.new(screenTo3D.X, screenTo3D.Y)
	DebugLine.Visible = true
	DebugLine.Color = Color3.fromHSV((tick() % 5) / 5, 1, 1)
end


local function updatePlayerBox(player)
	local head = player and player.Character and player.Character:FindFirstChild("ServerColliderHead")
	if not head then PlayerBox.Visible = false PlayerNameText.Visible = false return end
	local pos, onScreen = Camera:WorldToViewportPoint(head.Position)
	if not onScreen then PlayerBox.Visible = false PlayerNameText.Visible = false return end
	local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	local gap, width, height = 10, 70, 25
	local boxPos = Vector2.new(center.X - width / 2, center.Y + CircleRadius + gap)
	PlayerBox.Position = boxPos
	PlayerBox.Size = Vector2.new(width, height)
	PlayerBox.Color = Color3.new(1, 0, 0)
	PlayerBox.Visible = true
	PlayerNameText.Position = Vector2.new(center.X, boxPos.Y - 18)
	PlayerNameText.Text = player.Name
	PlayerNameText.Color = PlayerBox.Color
	PlayerNameText.Visible = true
end


local function updateCirclePosition()
	local screenSize = Camera.ViewportSize
	Circle.Position = Vector2.new(screenSize.X / 2, screenSize.Y / 2)
	Circle.Color = CircleVisible and OriginalCircleColor or Color3.fromHSV((tick() % 5) / 5, 1, 1)
end


UserInputService.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		RightMouseButtonHeld = true
		AimingEnabled = true
	end
end)
UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		RightMouseButtonHeld = false
		AimingEnabled = false
	end
end)


RunService.RenderStepped:Connect(function()
	updateCirclePosition()
	TargetPlayer = findNearestTargetToCenter()
	updateDebugLine()
	aimAtTarget()
	updatePlayerBox(TargetPlayer)
end)
